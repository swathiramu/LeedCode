You are given a string s and two integers x and y. You can perform two types of operations any number of times.
Remove substring "ab" and gain x points.
For example, when removing "ab" from "cabxbae" it becomes "cxbae".
Remove substring "ba" and gain y points.
For example, when removing "ba" from "cabxbae" it becomes "cabxe".
Return the maximum points you can gain after applying the above operations on s.






class Solution {
    public int maximumGain(String s, int x, int y) {
        if (x >= y) {
            return removePairs(s, 'a', 'b', x, y);
        } else {
            return removePairs(s, 'b', 'a', y, x);
        }
    }

    private int removePairs(String s, char first, char second, int firstValue, int secondValue) {
        StringBuilder stack1 = new StringBuilder();
        int score = 0;
        for (char c : s.toCharArray()) {
            if (stack1.length() > 0 && stack1.charAt(stack1.length() - 1) == first && c == second) {
                stack1.deleteCharAt(stack1.length() - 1);
                score += firstValue;
            } else {
                stack1.append(c);
            }
        }
        StringBuilder stack2 = new StringBuilder();
        for (int i = 0; i < stack1.length(); i++) {
            char c = stack1.charAt(i);
            if (stack2.length() > 0 && stack2.charAt(stack2.length() - 1) == second && c == first) {
                stack2.deleteCharAt(stack2.length() - 1);
                score += secondValue;
            } else {
                stack2.append(c);
            }
        }

        return score;
    }
}

